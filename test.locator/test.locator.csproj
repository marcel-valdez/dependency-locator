<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build;Test;Coverage" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{31C1A14F-F261-4328-9EEA-40E9ADD1D29D}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Test.Locator</RootNamespace>
    <AssemblyName>Test.Locator</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\dependency-locator\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>True</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>False</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>False</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>False</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>False</CodeContractsCacheAnalysisResults>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeContractsEnableRuntimeChecking>False</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>True</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsRuntimeCheckingLevel>None</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject>Test.Locator.Program</StartupObject>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Fasterflect, Version=2.0.1.0, Culture=neutral, PublicKeyToken=a64e1179c81b1e25, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\libraries\net45\Fasterflect.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="nunit-console-runner">
      <HintPath>..\libraries\net45\nunit-console-runner.dll</HintPath>
    </Reference>
    <Reference Include="nunit.core">
      <HintPath>..\libraries\net45\nunit.core.dll</HintPath>
    </Reference>
    <Reference Include="nunit.core.interfaces">
      <HintPath>..\libraries\net45\nunit.core.interfaces.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework, Version=2.6.0.12051, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\libraries\net45\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="nunit.util">
      <HintPath>..\libraries\net45\nunit.util.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Deployment" />
    <Reference Include="System.Xml" />
    <Reference Include="TestingTools, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\libraries\net45\TestingTools.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDependentAssemblyPaths Condition=" '$(VS100COMNTOOLS)' != '' " Include="$(VS100COMNTOOLS)..\IDE\PrivateAssemblies">
      <Visible>False</Visible>
    </CodeAnalysisDependentAssemblyPaths>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ConstructorContainerTest.cs" />
    <Compile Include="DependencyControllerTest.cs" />
    <Compile Include="GenericDefinitionContainerTest.cs" />
    <Compile Include="InterfaceConstructorsTest.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Stubs\CompetingGeneric.cs" />
    <Compile Include="Stubs\BaseGeneric.cs" />
    <Compile Include="Stubs\Generic.cs" />
    <Compile Include="Stubs\IGeneric.cs" />
    <Compile Include="Stubs\AnotherConstructorableStub.cs" />
    <Compile Include="Stubs\ConcreteStubDependency.cs" />
    <Compile Include="Stubs\ConstructorableStub.cs" />
    <Compile Include="DependencyLocatorTest.cs" />
    <Compile Include="DependencyLoaderTest.cs" />
    <Compile Include="Stubs\IConstructorableStubDependency.cs" />
    <Compile Include="Stubs\InheritedStubDependency.cs" />
    <Compile Include="Stubs\IStubDependency.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="TypeArrayComparerTest.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\interfaces\interfaces.csproj">
      <Project>{74EE8818-C42F-4864-9701-8B750A4DE802}</Project>
      <Name>interfaces</Name>
    </ProjectReference>
    <ProjectReference Include="..\locator\locator.csproj">
      <Project>{289189ED-19E8-4ED0-B1DA-AADF3663B509}</Project>
      <Name>locator</Name>
    </ProjectReference>
    <ProjectReference Include="..\testassembly\TestAssembly.csproj">
      <Project>{c2ca28d0-a37a-4f35-a9d6-6bb20e0e1bd9}</Project>
      <Name>TestAssembly</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="TestApp.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <SubType>Designer</SubType>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />

  <Target Name="Test" Condition=" '$(Configuration)' == 'Release' ">
    <Delete Files="UnitTestReport.xml" ContinueOnError="true" />
    <Exec Command="$(OutDir)$(AssemblyName).exe /xml=UnitTestReport.xml /domain=None" ContinueOnError="false" />
    <XmlPeek Condition="Exists('UnitTestReport.xml')" XmlInputPath="UnitTestReport.xml" Query="//test-case[@executed='True' and @success='False']/failure/message">
      <Output TaskParameter="Result" ItemName="Failures" />
    </XmlPeek>
    <Error Condition="'@(Failures)' != ''" Text="Unit tests failed: %(Failures.Identity)" />
  </Target>

  <Target Name="Coverage" DependsOnTargets="Build" Condition="'$(Coverage)' != ''">
    <Delete Files="..\$(AssemblyName).Coverage.xml" ContinueOnError="true">
    </Delete>
    <Exec Command="..\tools\OpenCover\OpenCover.Console.exe -register:user -target:$(OutDir)$(AssemblyName).exe -targetargs:/domain=None &quot;-targetdir:$(OutDir) &quot; -output:..\$(AssemblyName).Coverage.xml &quot;-filter:+[DependencyLocator*]* -[Test.Locator*]*&quot;" />
    <Exec Command="..\tools\reportgenerator\ReportGenerator.exe -reports:..\$(AssemblyName).Coverage.xml -targetdir:..\coverage-report -reporttypes:XML;HTML" ContinueOnError="True" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>